package ${config.basePackage}.domain.entity;

import com.changjinglu.api.common.util.BusinessPreconditions;
import com.changjinglu.common.bean.BeanUtil;
import ${config.basePackage}.constant.CommonErrorCode;
import ${config.basePackage}.interfaces.repository.${table.entityClass}Repository;
import ${config.basePackage}.interfaces.vo.${table.entityClass}VO;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;
import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import javax.annotation.Resource;
import java.io.Serializable;
import java.util.Date;

/**
 * <p>
 * ${table.tableComment}
 * </p>
 *
 * @author ${config.author}
 * @since ${config.dateStr}
 */
@Data
@EqualsAndHashCode(callSuper = false)
@Accessors(chain = true)
@NoArgsConstructor
@Component
@Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE)
public class ${table.entityClass}Entity extends BaseDeleteEntity implements Serializable {

    private static final long serialVersionUID = ${serialVersionUID}L;
    @Resource
    private ${table.entityClass}Repository ${table.entityName}Repository;

#foreach ( $column in $table.columns )
    /**
     * ${column.columnComment}
     */
    private ${column.javaDataType.getSimpleName()} ${column.fieldName};
#end

    /**
     * 创建
     */
    public void create(){
        ${table.entityName}Repository.create(this);
    }
    /**
     * 修改
     */
    public void update(){
        ${table.entityName}Repository.update(this);
    }
    /**
     * 主键查询
     */
    public void getById() {
        ${table.entityClass}VO entity = ${table.entityName}Repository.getById(id);
        BusinessPreconditions.checkNotNull(entity, CommonErrorCode.NOT_FOUND, id);
        BeanUtil.doTransfer(entity, this);
    }
}
