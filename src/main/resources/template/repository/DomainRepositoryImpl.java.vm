package ${config.basePackage}#if("$!{config.moduleName}"!="").${config.moduleName}#end.repository;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.changjinglu.common.bean.BeanUtil;
import ${config.basePackage}#if("$!{config.moduleName}"!="").${config.moduleName}#end.domain.${table.entityClass}DO;
import ${config.basePackage}#if("$!{config.moduleName}"!="").${config.moduleName}#end.manager.I${table.entityClass}Manager;
import ${config.basePackage}#if("$!{config.moduleName}"!="").${config.moduleName}#end.query.${table.entityClass}Query;
import ${config.basePackage}.domain.entity.${table.entityClass}Entity;
import ${config.basePackage}.interfaces.query.${table.entityClass}RepositoryQuery;
import ${config.basePackage}.interfaces.repository.${table.entityClass}Repository;
import ${config.basePackage}.interfaces.vo.${table.entityClass}VO;
import ${config.basePackage}.interfaces.vo.PageVO;
import org.springframework.stereotype.Component;
import javax.annotation.Resource;
import java.util.List;

/**
 * <p> ${table.entityClass}RepositoryImpl </p>
 * <p> ${table.tableComment}仓储实现 </p>
 *
 * @author ${config.author}
 * @since ${config.dateStr}
 */
@Component
public class ${table.entityClass}RepositoryImpl implements ${table.entityClass}Repository {
    @Resource
    private I${table.entityClass}Manager ${table.entityName}Manager;

    @Override
    public void create(${table.entityClass}Entity ${table.entityName}Entity) {
        ${table.entityClass}DO ${table.entityName}DO = BeanUtil.doTransfer(${table.entityName}Entity, ${table.entityClass}DO.class);
        ${table.entityName}Manager.save(${table.entityName}DO);
        ${table.entityName}Entity.setId(${table.entityName}DO.getId());
    }

    @Override
    public void update(${table.entityClass}Entity ${table.entityName}Entity) {
        ${table.entityName}Manager.updateById(BeanUtil.doTransfer(${table.entityName}Entity, ${table.entityClass}DO.class));
    }

    @Override
    public ${table.entityClass}VO getById(Long id) {
        ${table.entityClass}DO ${table.entityName}DO = ${table.entityName}Manager.getById(id);
        if(${table.entityName}DO != null){
            return BeanUtil.doTransfer(${table.entityName}DO, ${table.entityClass}VO.class);
        }
        return null;
    }
    
    @Override
    public List<${table.entityClass}VO> query(${table.entityClass}RepositoryQuery query) {
        List<${table.entityClass}VO> resultList = Lists.newArrayList();
        List<${table.entityClass}DO> doList = ${table.entityName}Manager.query(BeanUtil.doTransfer(query, ${table.entityClass}Query.class));
        if(CollectionUtils.isNotEmpty(doList)){
            resultList = BeanUtil.doTransfer(doList, ${table.entityClass}VO.class);
        }
        return resultList;
    }

    @Override
    public PageVO<${table.entityClass}VO> pageQuery(${table.entityClass}RepositoryQuery ${table.entityName}Query) {
        IPage<${table.entityClass}DO> pageResult = ${table.entityName}Manager.pageQuery(
                BeanUtil.doTransfer(${table.entityName}Query, ${table.entityClass}Query.class)
        );

        List<${table.entityClass}VO> list = BeanUtil.doTransfer(pageResult.getRecords(), ${table.entityClass}VO.class);

        return new PageVO<>(list, pageResult.getTotal(), pageResult.getSize(), pageResult.getCurrent());
    }
}
